Package: endura-build-tools
Version: 0.1.13.e2eeb5e
Architecture: amd64
Maintainer: Infrared Security, LLC.
Installed-Size: 10128
Filename: ./endura-build-tools_0.1.13.e2eeb5e_amd64.deb
Size: 2702704
MD5sum: 4aa7e7fc4a3836c654b8481cec28fd1d
SHA1: 09084151e868884fd9af98a3a272a9773bed2e3c
SHA256: 9bcfb0ecd6d550dc24408c26eebe96e57eee15304049f8ba89c232285f209b03
Section: Development
Priority: optional
Description: build tools
 # endura-build-tools
 .
 TBD
 .
 ## Environment Settings
 .
 - **ENDURA_BATCHER_AUTOFLUSH**: true/false (default: false)
 - **ENDURA_LOG_LEVEL**: level of logging (default: info, cli supported)
 - **ENDURA_LOG_FILE**: save logs to this file (default: undefined, cli
 supported)
 - **ENDURA_TEAM_SERVER**: https://your.team.server (default: undefined, cli
 supported)
 .
 ## ADDITIONAL CHECKS:
 .
 - Inventory of libraries being used
 - Execution of deleted binaries: check if inode == 0
 - Fileless Execution:
     -> track fds created via memfd_create per process
     -> check if filename starts with "/proc/self/fd/" or "/dev/fd/" indicating
 executing from fd
     -> extract fd from filename and see if found within "track fds" map
 .
 .
 ## ISSUE: Who/what is allowed to kill our own process? use our socket?
     [x] only root users not bound to a job can kill endura
     -> only root users not bound to a job can interact with socket
 .
 ## BUG: mode derive failed
 .
 - not all events getting processed before job is removed
 - temporary workaround in job stop command:
 .
     // FIXME: best effort to allow processing of remaining events
     std::thread::sleep(Duration::from_secs(3));
 .
 ## BUG: SELinux permissions from container development
 - running this seems to work: `sudo chcon -Rt container_file_t $(BASEDIR)
 >/dev/null;`
 - running in non-selinux envs causes the build to fail with errors like the
 following in ubuntu: `chcon: can't apply partial context to unlabeled file
 'README.md'`
 .
 ## QUESTION: musl threading performance issues
 .
 - see:
 https://www.linkedin.com/pulse/testing-alternative-c-memory-allocators-pt-2-musl-mystery-gomes/
 - adopt mimalloc? already implemented. no metrics to assess impact!!

